{"ast":null,"code":"import _defineProperty from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport Comment from \"../components/Comment\";\nexport default function Post(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        PostData = _useState2[0],\n        setPostData = _useState2[1]; // const [CommentData, setCommentData] = useState(null);\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openModal = _useState4[0],\n        setOpenModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        liked = _useState6[0],\n        setLiked = _useState6[1];\n\n  const _useState7 = useState(data.likeCount),\n        _useState8 = _slicedToArray(_useState7, 2),\n        likeCount = _useState8[0],\n        setLikeCount = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        loading = _useState10[0],\n        setLoading = _useState10[1];\n\n  const _useState11 = useState({}),\n        _useState12 = _slicedToArray(_useState11, 2),\n        commentInput = _useState12[0],\n        setCommentInput = _useState12[1];\n\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  let history = useHistory();\n\n  const handleOnClose = event => {\n    event.preventDefault();\n    setOpenModal(false);\n  };\n\n  const handleOnChange = event => {\n    event.preventDefault();\n    setPostData(_objectSpread({}, PostData, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    axios({\n      url: \"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(PostData.id, \"/edit\"),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      data: JSON.stringify(PostData)\n    });\n    setOpenModal(false);\n  };\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(PostData.id, \"/like\"), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data.status);\n\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput(_objectSpread({}, commentInput, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://localhost:5000/post/\".concat(PostData.id, \"/comment\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      body: JSON.stringify(commentInput)\n    });\n    const data = await response.json();\n\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(\"https://localhost:5000/post/\".concat(id), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  const deletePost = async id => {\n    const res = await fetch(\"https://localhost:5000/post/\".concat(id, \"/delete\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(props.token)\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    });\n    const data = await res.json();\n\n    if (data.success) {\n      console.log(\"delete success post id:\", id);\n      history.push(\"/home\");\n      setPostData(props.post);\n    } else {\n      console.log(data.status);\n    }\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"artwork-home-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-btn-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"title-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, PostData.title)), React.createElement(\"div\", {\n    className: \"edit-delete-like-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, props.user.id == PostData.author.id && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: event => {\n      event.preventDefault();\n      setOpenModal(true);\n    },\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\",\n    onClick: () => deletePost(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Delete\")), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOnLike,\n    className: \"btn btn-sm btn-outline-secondary edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), \" \", React.createElement(\"i\", {\n    className: \"fas fa-heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }), \" \", liked ? \"Like\" : \"Unlike\"))), React.createElement(\"div\", {\n    className: \"author-date-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"By \", PostData.author.firstname), React.createElement(\"small\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, PostData.created_at)), React.createElement(\"img\", {\n    // className=\"bd-placeholder-img card-img-top\"\n    width: \"700\",\n    height: \"500\",\n    src: \"\".concat(PostData.image_url),\n    className: \"img-single-post container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"  card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, PostData.body), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onChange: handleOnCommentChange,\n    onSubmit: handleOnCommentSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      marginTop: \"35px\",\n      marginBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Add a new comment\")), React.createElement(\"textarea\", {\n    name: \"body\",\n    className: \"form-control form-post-area\",\n    id: \"exampleFormControlTextarea1\",\n    placeholder: \"Write a comment...\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    className: \"upload-btn signin-btn-v2 post-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Post Comment\")), PostData.comments.map(commentData => {\n    return React.createElement(Comment, {\n      data: commentData,\n      key: commentData.id,\n      handleOnLoading: handleOnLoading,\n      user: props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    });\n  })), React.createElement(Modal, {\n    show: openModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    onClick: handleOnClose,\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    className: \"d-flex flex-column justify-content-center align-items-center \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"Edit Post\"))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleOnSubmit,\n    onChange: handleOnChange,\n    className: \"d-flex flex-column justify-content-center  \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title-input-edit-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, \"Artwork URL\"), React.createElement(\"input\", {\n    name: \"image_url\",\n    value: PostData.image_url,\n    className: \"form-control form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: PostData ? PostData.image_url : \"\",\n    className: \"img-edit\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"title-input-edit-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    name: \"title\",\n    value: PostData.title,\n    className: \"input-edit-post form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"title-input-edit-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    name: \"body\",\n    value: PostData.body,\n    className: \"input-edit-post form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg btn-primary btn-block signin-btn-v2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \" \", \"Press this button\", \" \")))));\n}","map":{"version":3,"sources":["/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js"],"names":["React","useState","useEffect","useParams","useHistory","Button","Spinner","axios","Modal","Comment","Post","props","PostData","setPostData","openModal","setOpenModal","liked","setLiked","data","likeCount","setLikeCount","loading","setLoading","commentInput","setCommentInput","id","history","handleOnClose","event","preventDefault","handleOnChange","target","name","value","handleOnSubmit","url","process","env","REACT_APP_API_URL","method","headers","Authorization","localStorage","getItem","JSON","stringify","handleOnLike","response","fetch","json","console","log","status","handleOnCommentChange","handleOnCommentSubmit","Accept","body","handleOnLoading","isLiked","deletePost","res","token","success","push","post","title","user","author","firstname","created_at","image_url","marginTop","marginBottom","comments","map","commentData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACFV,QAAQ,CAAC,IAAD,CADN;AAAA;AAAA,QAC3BW,QAD2B;AAAA,QACjBC,WADiB,kBAElC;;;AAFkC,qBAIAZ,QAAQ,CAAC,KAAD,CAJR;AAAA;AAAA,QAI3Ba,SAJ2B;AAAA,QAIhBC,YAJgB;;AAAA,qBAKRd,QAAQ,CAAC,KAAD,CALA;AAAA;AAAA,QAK3Be,KAL2B;AAAA,QAKpBC,QALoB;;AAAA,qBAMAhB,QAAQ,CAACiB,IAAI,CAACC,SAAN,CANR;AAAA;AAAA,QAM3BA,SAN2B;AAAA,QAMhBC,YANgB;;AAAA,qBAOJnB,QAAQ,CAAC,IAAD,CAPJ;AAAA;AAAA,QAO3BoB,OAP2B;AAAA,QAOlBC,UAPkB;;AAAA,sBAQMrB,QAAQ,CAAC,EAAD,CARd;AAAA;AAAA,QAQ3BsB,YAR2B;AAAA,QAQbC,eARa;;AAAA,qBASnBrB,SAAS,EATU;AAAA,QAS1BsB,EAT0B,cAS1BA,EAT0B;;AAUlC,MAAIC,OAAO,GAAGtB,UAAU,EAAxB;;AAEA,QAAMuB,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,QAAMe,cAAc,GAAGF,KAAK,IAAI;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAhB,IAAAA,WAAW,mBAAMD,QAAN;AAAgB,OAACgB,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAAlD,OAAX;AACD,GAHD;;AAKA,QAAMC,cAAc,GAAGN,KAAK,IAAI;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAtB,IAAAA,KAAK,CAAC;AACJ4B,MAAAA,GAAG,YAAKC,OAAO,CAACC,GAAR,CAAYC,iBAAjB,mBAA2C1B,QAAQ,CAACa,EAApD,UADC;AAEJc,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,kBAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AAFN,OAHL;AAOJzB,MAAAA,IAAI,EAAE0B,IAAI,CAACC,SAAL,CAAejC,QAAf;AAPF,KAAD,CAAL;AASAG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAZD;;AAcA,QAAM+B,YAAY,GAAG,MAAMlB,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMkB,QAAQ,GAAG,MAAMC,KAAK,WACvBZ,OAAO,CAACC,GAAR,CAAYC,iBADW,mBACe1B,QAAQ,CAACa,EADxB,YAE1B;AACEc,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,kBAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AADN;AAFX,KAF0B,CAA5B;AASA,UAAMzB,IAAI,GAAG,MAAM6B,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAI,CAACkC,MAAjB;;AACA,QAAIlC,IAAI,CAACkC,MAAL,KAAgB,IAApB,EAA0B;AACxBnC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GAlBD;;AAoBA,QAAMoC,qBAAqB,GAAGzB,KAAK,IAAI;AACrCA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,eAAe,mBACVD,YADU;AAEb,OAACK,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAFrB,OAAf;AAID,GAND;;AAQA,QAAMqB,qBAAqB,GAAG,MAAM1B,KAAN,IAAe;AAC3CA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMkB,QAAQ,GAAG,MAAMC,KAAK,uCACKpC,QAAQ,CAACa,EADd,eAE1B;AACEc,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPe,QAAAA,MAAM,EAAE,kBAFD;AAGPd,QAAAA,aAAa,kBAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AAHN,OAFX;AAOEa,MAAAA,IAAI,EAAEZ,IAAI,CAACC,SAAL,CAAetB,YAAf;AAPR,KAF0B,CAA5B;AAYA,UAAML,IAAI,GAAG,MAAM6B,QAAQ,CAACE,IAAT,EAAnB;;AACA,QAAI/B,IAAI,CAACkC,MAAL,KAAgB,SAApB,EAA+B;AAC7BK,MAAAA,eAAe;AAChB;;AACDA,IAAAA,eAAe;AAChB,GAnBD;;AAqBA,QAAMA,eAAe,GAAG,YAAY;AAClC,UAAMV,QAAQ,GAAG,MAAMC,KAAK,uCAAgCvB,EAAhC,GAAsC;AAChEc,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,kBAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AADN;AAFuD,KAAtC,CAA5B;AAOA,UAAMzB,IAAI,GAAG,MAAM6B,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAZ;;AACA,QAAIA,IAAI,CAACwC,OAAT,EAAkB;AAChBzC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AACDiC,IAAAA,OAAO,CAACC,GAAR,CAAYvC,QAAZ;AACAC,IAAAA,WAAW,CAACK,IAAD,CAAX;AACAI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAlBD;;AAoBA,QAAMqC,UAAU,GAAG,MAAMlC,EAAN,IAAY;AAC7B,UAAMmC,GAAG,GAAG,MAAMZ,KAAK,uCAAgCvB,EAAhC,cAA6C;AAClEc,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,kBAAW9B,KAAK,CAACkD,KAAjB;AAFN,OAFyD;AAMlEL,MAAAA,IAAI,EAAEZ,IAAI,CAACC,SAAL,CAAe;AAAEpB,QAAAA,EAAE,EAAEA;AAAN,OAAf;AAN4D,KAA7C,CAAvB;AAQA,UAAMP,IAAI,GAAG,MAAM0C,GAAG,CAACX,IAAJ,EAAnB;;AACA,QAAI/B,IAAI,CAAC4C,OAAT,EAAkB;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC1B,EAAvC;AACAC,MAAAA,OAAO,CAACqC,IAAR,CAAa,OAAb;AACAlD,MAAAA,WAAW,CAACF,KAAK,CAACqD,IAAP,CAAX;AACD,KAJD,MAIO;AACLd,MAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAI,CAACkC,MAAjB;AACD;AACF,GAjBD;;AAmBAlD,EAAAA,SAAS,CAAC,MAAM;AACduD,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAAC7C,QAAL,EAAe;AACb,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,OAAO,GACN,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCT,QAAQ,CAACqD,KAA5C,CADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtD,KAAK,CAACuD,IAAN,CAAWzC,EAAX,IAAiBb,QAAQ,CAACuD,MAAT,CAAgB1C,EAAjC,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAEG,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACAd,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJH;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,SAAS,EAAC,gEANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gEAFZ;AAGE,IAAA,OAAO,EAAE,MAAM4C,UAAU,CAAClC,EAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CAFJ,EAuBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEqB,YAFX;AAGE,IAAA,SAAS,EAAC,2CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,OAKY;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALZ,EAK6C,GAL7C,EAMG9B,KAAK,GAAG,MAAH,GAAY,QANpB,CAvBF,CAJF,CAfF,EAoDE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQJ,QAAQ,CAACuD,MAAT,CAAgBC,SAAxB,CADF,EAGE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BxD,QAAQ,CAACyD,UAAxC,CAHF,CApDF,EAyDE;AACE;AACA,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,MAAM,EAAC,KAHT;AAIE,IAAA,GAAG,YAAKzD,QAAQ,CAAC0D,SAAd,CAJL;AAKE,IAAA,SAAS,EAAC,2BALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,EAkEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B1D,QAAQ,CAAC4C,IAAnC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CAlEF,EA+EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/EF,EAiFE;AACE,IAAA,QAAQ,EAAEH,qBADZ;AAEE,IAAA,QAAQ,EAAEC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAI,IAAA,KAAK,EAAE;AAAEiB,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAJF,EAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,6BAFZ;AAGE,IAAA,EAAE,EAAC,6BAHL;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,IAAI,EAAC,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,SAAS,EAAC,mCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,CAjFF,EAuGG5D,QAAQ,CAAC6D,QAAT,CAAkBC,GAAlB,CAAsBC,WAAW,IAAI;AACpC,WACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAEA,WADR;AAEE,MAAA,GAAG,EAAEA,WAAW,CAAClD,EAFnB;AAGE,MAAA,eAAe,EAAEgC,eAHnB;AAIE,MAAA,IAAI,EAAE9C,KAAK,CAACuD,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CAvGH,CAJJ,EAgIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEpD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,OAAO,EAAEa,aAAvB;AAAsC,IAAA,WAAW,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,SAAS,EAAC,+DAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CADF,EAME,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEO,cADZ;AAEE,IAAA,QAAQ,EAAEJ,cAFZ;AAGE,IAAA,SAAS,EAAC,6CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAQE;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAElB,QAAQ,CAAC0D,SAFlB;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE;AACE,IAAA,GAAG,EAAE1D,QAAQ,GAAGA,QAAQ,CAAC0D,SAAZ,GAAwB,EADvC;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAsBE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF,EAwBE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE1D,QAAQ,CAACqD,KAFlB;AAGE,IAAA,SAAS,EAAC,8BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EAgCE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhCF,EAiCE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAErD,QAAQ,CAAC4C,IAFlB;AAGE,IAAA,SAAS,EAAC,8BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAwCE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,GAJH,uBAKoB,GALpB,CAxCF,CADF,CANF,CAhIF,CADF;AA4LD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport Comment from \"../components/Comment\";\n\nexport default function Post(props) {\n  const [PostData, setPostData] = useState(null);\n  // const [CommentData, setCommentData] = useState(null);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const [likeCount, setLikeCount] = useState(data.likeCount)\n  const [loading, setLoading] = useState(true);\n  const [commentInput, setCommentInput] = useState({});\n  const { id } = useParams();\n  let history = useHistory();\n\n  const handleOnClose = event => {\n    event.preventDefault();\n    setOpenModal(false);\n  };\n\n  const handleOnChange = event => {\n    event.preventDefault();\n    setPostData({ ...PostData, [event.target.name]: event.target.value });\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    axios({\n      url: `${process.env.REACT_APP_API_URL}/post/${PostData.id}/edit`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      data: JSON.stringify(PostData)\n    });\n    setOpenModal(false);\n  };\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/post/${PostData.id}/like`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        }\n      }\n    );\n    const data = await response.json();\n    console.log(data.status);\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput({\n      ...commentInput,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `https://localhost:5000/post/${PostData.id}/comment`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(commentInput)\n      }\n    );\n    const data = await response.json();\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(`https://localhost:5000/post/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      }\n    });\n\n    const data = await response.json();\n    console.log(data);\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  const deletePost = async id => {\n    const res = await fetch(`https://localhost:5000/post/${id}/delete`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${props.token}`\n      },\n      body: JSON.stringify({ id: id })\n    });\n    const data = await res.json();\n    if (data.success) {\n      console.log(\"delete success post id:\", id);\n      history.push(\"/home\");\n      setPostData(props.post);\n    } else {\n      console.log(data.status);\n    }\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container col-xl-6 col-md-12\">\n      {loading ? (\n        <Spinner animation=\"border\" variant=\"primary\" />\n      ) : (\n        <div className=\"artwork-home-area\">\n          {/* <div className=\"card mb-4 shadow-sm\"> */}\n          {/* <svg\n            className=\"bd-placeholder-img card-img-top\"\n            width=\"100%\"\n            height=\"225\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            preserveAspectRatio=\"xMidYMid slice\"\n            focusable=\"false\"\n            role=\"img\"\n            aria-label=\"Placeholder: Thumbnail\"\n          > */}\n          {/* <title>Placeholder</title> */}\n          {/* <h5 className=\"title-single-post\">{PostData.title}</h5> */}\n\n          <div className=\"title-btn-single-post\">\n            <div>\n              <h5 className=\"title-single-post\">{PostData.title}</h5>\n            </div>\n            <div className=\"edit-delete-like-btn\">\n              {props.user.id == PostData.author.id && (\n                <span>\n                  <button\n                    onClick={event => {\n                      event.preventDefault();\n                      setOpenModal(true);\n                    }}\n                    type=\"button\"\n                    className=\"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\"\n                    onClick={() => deletePost(id)}\n                  >\n                    Delete\n                  </button>\n                </span>\n              )}\n\n              <button\n                type=\"button\"\n                onClick={handleOnLike}\n                className=\"btn btn-sm btn-outline-secondary edit-btn\"\n              >\n                <i>{}</i> <i className=\"fas fa-heart\"></i>{\" \"}\n                {liked ? \"Like\" : \"Unlike\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"author-date-single-post\">\n            <h5>By {PostData.author.firstname}</h5>\n\n            <small className=\"text-muted\">{PostData.created_at}</small>\n          </div>\n          <img\n            // className=\"bd-placeholder-img card-img-top\"\n            width=\"700\"\n            height=\"500\"\n            src={`${PostData.image_url}`}\n            className=\"img-single-post container\"\n          ></img>\n\n          {/* </svg> */}\n          <div className=\"  card-body\">\n            {/* <p className=\"card-text\">{PostData.title}</p> */}\n            <p className=\"card-text\">{PostData.body}</p>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"btn-group\">\n                {/* <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\n              <Nav.Link href=\"/single-post\">View</Nav.Link> */}\n                {/* View */}\n                {/* </button> */}\n              </div>\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <form\n            onChange={handleOnCommentChange}\n            onSubmit={handleOnCommentSubmit}\n          >\n            <h6 style={{ marginTop: \"35px\", marginBottom: \"20px\" }}>\n              <strong>Add a new comment</strong>\n            </h6>\n            <textarea\n              name=\"body\"\n              className=\"form-control form-post-area\"\n              id=\"exampleFormControlTextarea1\"\n              placeholder=\"Write a comment...\"\n              rows=\"3\"\n            ></textarea>\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              className=\"upload-btn signin-btn-v2 post-btn\"\n            >\n              Post Comment\n            </Button>\n          </form>\n          {PostData.comments.map(commentData => {\n            return (\n              <Comment\n                data={commentData}\n                key={commentData.id}\n                handleOnLoading={handleOnLoading}\n                user={props.user}\n              />\n            );\n          })}\n          {/* <div className=\"d-flex flex-wrap\">\n          {comment ? (\n            comment.map(post => {\n              return <Comment data={comment} />;\n            })\n          ) : (\n            <p>There is not comment</p>\n          )}\n        </div> */}\n        </div>\n      )}\n      <Modal show={openModal}>\n        <Modal.Header onClick={handleOnClose} closeButton>\n          <Modal.Title className=\"d-flex flex-column justify-content-center align-items-center \">\n            <strong>Edit Post</strong>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form\n            onSubmit={handleOnSubmit}\n            onChange={handleOnChange}\n            className=\"d-flex flex-column justify-content-center  \"\n          >\n            {/* <div> */}\n            <p className=\"title-input-edit-post\">Artwork URL</p>\n\n            <input\n              name=\"image_url\"\n              value={PostData.image_url}\n              className=\"form-control form-control\"\n            ></input>\n            {/* </div> */}\n\n            <img\n              src={PostData ? PostData.image_url : \"\"}\n              className=\"img-edit\"\n              alt=\"\"\n            />\n\n            {/* <div> */}\n            <p className=\"title-input-edit-post\">Title</p>\n\n            <input\n              name=\"title\"\n              value={PostData.title}\n              className=\"input-edit-post form-control\"\n            ></input>\n            {/* </div> */}\n\n            {/* <div> */}\n            <p className=\"title-input-edit-post\">Description</p>\n            <input\n              name=\"body\"\n              value={PostData.body}\n              className=\"input-edit-post form-control\"\n            ></input>\n            {/* </div> */}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-lg btn-primary btn-block signin-btn-v2\"\n            >\n              {\" \"}\n              Press this button{\" \"}\n            </button>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}