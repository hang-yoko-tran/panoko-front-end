{"ast":null,"code":"import _defineProperty from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport { axios } from \"axios\";\nimport Comment from \"../components/Comment\";\nexport default function Post() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        PostData = _useState2[0],\n        setPostData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        liked = _useState4[0],\n        setLiked = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        commentInput = _useState8[0],\n        setCommentInput = _useState8[1];\n\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://localhost:5000/post/\".concat(PostData.id, \"/like\"), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data.status);\n\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput(_objectSpread({}, commentInput, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://localhost:5000/post/\".concat(PostData.id, \"/comment\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      body: JSON.stringify(commentInput)\n    });\n    const data = await response.json();\n\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(\"https://localhost:5000/post/\".concat(id), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"artwork-home-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-btn-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"title-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, PostData.title)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOnLike,\n    className: \"btn btn-sm btn-outline-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), \" \", liked ? \"Like\" : \"Unlike\"))), React.createElement(\"div\", {\n    className: \"author-date-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"By \", PostData.author.firstname), React.createElement(\"small\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, PostData.created_at)), React.createElement(\"img\", {\n    // className=\"bd-placeholder-img card-img-top\"\n    width: \"700\",\n    height: \"500\",\n    src: \"\".concat(PostData.image_url),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"  card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, PostData.body), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), PostData.comments.map(commentData => {\n    return React.createElement(Comment, {\n      data: commentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    });\n  }), React.createElement(\"form\", {\n    onChange: handleOnCommentChange,\n    onSubmit: handleOnCommentSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      marginTop: \"35px\",\n      marginBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Add a new comment\")), React.createElement(\"textarea\", {\n    name: \"body\",\n    className: \"form-control form-post-area\",\n    id: \"exampleFormControlTextarea1\",\n    placeholder: \"Write a comment...\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    className: \"upload-btn signin-btn-v2 post-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Post Comment\"))));\n}","map":{"version":3,"sources":["/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js"],"names":["React","useState","useEffect","useParams","Button","Spinner","axios","Comment","Post","PostData","setPostData","liked","setLiked","loading","setLoading","commentInput","setCommentInput","id","handleOnLike","event","preventDefault","response","fetch","method","headers","Authorization","localStorage","getItem","data","json","console","log","status","handleOnCommentChange","target","name","value","handleOnCommentSubmit","body","JSON","stringify","handleOnLoading","isLiked","title","author","firstname","created_at","image_url","comments","map","commentData","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport {axios} from \"axios\";\nimport Comment from \"../components/Comment\"\n\nexport default function Post() {\n  const [PostData, setPostData] = useState(null);\n  const [liked, setLiked] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [commentInput, setCommentInput] = useState({})\n  const { id } = useParams();\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `https://localhost:5000/post/${PostData.id}/like`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        }\n      }\n    );\n    const data = await response.json();\n    console.log(data.status);\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n const handleOnCommentChange = (event) => {\n   event.preventDefault()\n   setCommentInput({...commentInput, [event.target.name]: event.target.value})\n }\n\n const handleOnCommentSubmit = async (event) => {\n    event.preventDefault()\n    const response = await fetch(`https://localhost:5000/post/${PostData.id}/comment`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify(commentInput)\n    })\n    const data = await response.json()\n    if(data.status === \"created\"){\n      handleOnLoading()\n    }\n    handleOnLoading()\n\n }\n\n  const handleOnLoading = async () => {\n    const response = await fetch(`https://localhost:5000/post/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      }\n    });\n\n    const data = await response.json();\n    console.log(data)\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false)\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container col-6\">\n      {loading ? (\n        <Spinner animation=\"border\" variant=\"primary\" />\n      ) : (\n        <div className=\"artwork-home-area\">\n          {/* <div className=\"card mb-4 shadow-sm\"> */}\n          {/* <svg\n            className=\"bd-placeholder-img card-img-top\"\n            width=\"100%\"\n            height=\"225\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            preserveAspectRatio=\"xMidYMid slice\"\n            focusable=\"false\"\n            role=\"img\"\n            aria-label=\"Placeholder: Thumbnail\"\n          > */}\n          {/* <title>Placeholder</title> */}\n          {/* <h5 className=\"title-single-post\">{PostData.title}</h5> */}\n\n          <div className=\"title-btn-single-post\">\n            <div>\n              <h5 className=\"title-single-post\">{PostData.title}</h5>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary edit-btn-single-post\"\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleOnLike}\n                className=\"btn btn-sm btn-outline-secondary\"\n              >\n                <i className=\"fas fa-heart\"></i> {liked ? \"Like\" : \"Unlike\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"author-date-single-post\">\n            <h5>By {PostData.author.firstname}</h5>\n\n            <small className=\"text-muted\">{PostData.created_at}</small>\n          </div>\n          <img\n            // className=\"bd-placeholder-img card-img-top\"\n            width=\"700\"\n            height=\"500\"\n            src={`${PostData.image_url}`}\n          ></img>\n\n          {/* </svg> */}\n          <div className=\"  card-body\">\n            {/* <p className=\"card-text\">{PostData.title}</p> */}\n            <p className=\"card-text\">{PostData.body}</p>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"btn-group\">\n                {/* <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\n              <Nav.Link href=\"/single-post\">View</Nav.Link> */}\n                {/* View */}\n                {/* </button> */}\n              </div>\n            </div>\n          </div>\n\n          <hr></hr>\n          \n          {PostData.comments.map((commentData) => {\n            return <Comment data={commentData} />\n          })}\n\n          <form\n          onChange={handleOnCommentChange}\n          onSubmit={handleOnCommentSubmit}\n          >\n            <h6 style={{ marginTop: \"35px\", marginBottom: \"20px\" }}>\n              <strong>Add a new comment</strong>\n            </h6>\n            <textarea\n              name=\"body\"\n              className=\"form-control form-post-area\"\n              id=\"exampleFormControlTextarea1\"\n              placeholder=\"Write a comment...\"\n              rows=\"3\"\n            ></textarea>\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              className=\"upload-btn signin-btn-v2 post-btn\"\n            >\n              Post Comment\n            </Button>\n          </form>\n          {/* <div className=\"d-flex flex-wrap\">\n          {comment ? (\n            comment.map(post => {\n              return <Comment data={comment} />;\n            })\n          ) : (\n            <p>There is not comment</p>\n          )}\n        </div> */}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}