{"ast":null,"code":"import _defineProperty from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport Comment from \"../components/Comment\";\nexport default function Post(props) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        PostData = _useState2[0],\n        setPostData = _useState2[1]; // const [CommentData, setCommentData] = useState(null);\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openModal = _useState4[0],\n        setOpenModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        liked = _useState6[0],\n        setLiked = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        commentInput = _useState10[0],\n        setCommentInput = _useState10[1];\n\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  let history = useHistory();\n\n  const handleOnClose = event => {\n    event.preventDefault();\n    setOpenModal(false);\n  };\n\n  const handleOnChange = event => {\n    event.preventDefault();\n    setPostData(_objectSpread({}, PostData, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    axios({\n      url: \"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(PostData.id, \"/edit\"),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      data: JSON.stringify(PostData)\n    });\n    setOpenModal(false);\n  };\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/post/\").concat(PostData.id, \"/like\"), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data.status);\n\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput(_objectSpread({}, commentInput, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://localhost:5000/post/\".concat(PostData.id, \"/comment\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      body: JSON.stringify(commentInput)\n    });\n    const data = await response.json();\n\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(\"https://localhost:5000/post/\".concat(id), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  const deletePost = async id => {\n    const res = await fetch(\"https://localhost:5000/post/\".concat(id, \"/delete\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(props.token)\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    });\n    const data = await res.json();\n\n    if (data.success) {\n      console.log(\"delete success post id:\", id);\n      history.push(\"/home\");\n      setPostData(props.post);\n    } else {\n      console.log(data.status);\n    }\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"artwork-home-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-btn-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"title-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, PostData.title)), React.createElement(\"div\", {\n    className: \"edit-delete-like-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: event => {\n      event.preventDefault();\n      setOpenModal(true);\n    },\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\",\n    onClick: () => deletePost(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOnLike,\n    className: \"btn btn-sm btn-outline-secondary edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), \" \", liked ? \"Like\" : \"Unlike\"))), React.createElement(\"div\", {\n    className: \"author-date-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"By \", PostData.author.firstname), React.createElement(\"small\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, PostData.created_at)), React.createElement(\"img\", {\n    // className=\"bd-placeholder-img card-img-top\"\n    width: \"700\",\n    height: \"500\",\n    src: \"\".concat(PostData.image_url),\n    className: \"img-single-post container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"  card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, PostData.body), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onChange: handleOnCommentChange,\n    onSubmit: handleOnCommentSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      marginTop: \"35px\",\n      marginBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Add a new comment\")), React.createElement(\"textarea\", {\n    name: \"body\",\n    className: \"form-control form-post-area\",\n    id: \"exampleFormControlTextarea1\",\n    placeholder: \"Write a comment...\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    className: \"upload-btn signin-btn-v2 post-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Post Comment\")), PostData.comments.map(commentData => {\n    return React.createElement(Comment, {\n      data: commentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    });\n  })), React.createElement(Modal, {\n    show: openModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    onClick: handleOnClose,\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    className: \"d-flex flex-column justify-content-center align-items-center \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Edit Post\"))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleOnSubmit,\n    onChange: handleOnChange,\n    className: \"d-flex flex-column justify-content-center  \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title-input-edit-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, \"Artwork URL\"), React.createElement(\"input\", {\n    name: \"image_url\",\n    value: PostData.image_url,\n    className: \"form-control form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: PostData ? PostData.image_url : \"\",\n    className: \"imga\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontWeight: \"600\",\n      marginTop: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"input\", {\n    name: \"title\",\n    value: PostData.title,\n    className: \"input-edit-post form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontWeight: \"600\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Description\"), React.createElement(\"input\", {\n    name: \"body\",\n    value: PostData.body,\n    className: \"input-edit-post form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg btn-primary btn-block signin-btn-v2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, \" \", \"Press this button\", \" \")))));\n}","map":{"version":3,"sources":["/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js"],"names":["React","useState","useEffect","useParams","useHistory","Button","Spinner","axios","Modal","Comment","Post","props","PostData","setPostData","openModal","setOpenModal","liked","setLiked","loading","setLoading","commentInput","setCommentInput","id","history","handleOnClose","event","preventDefault","handleOnChange","target","name","value","handleOnSubmit","url","process","env","REACT_APP_API_URL","method","headers","Authorization","localStorage","getItem","data","JSON","stringify","handleOnLike","response","fetch","json","console","log","status","handleOnCommentChange","handleOnCommentSubmit","Accept","body","handleOnLoading","isLiked","deletePost","res","token","success","push","post","title","author","firstname","created_at","image_url","marginTop","marginBottom","comments","map","commentData","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport Comment from \"../components/Comment\";\n\nexport default function Post(props) {\n  const [PostData, setPostData] = useState(null);\n  // const [CommentData, setCommentData] = useState(null);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [commentInput, setCommentInput] = useState({});\n  const { id } = useParams();\n  let history = useHistory();\n\n  const handleOnClose = event => {\n    event.preventDefault();\n    setOpenModal(false);\n  };\n\n  const handleOnChange = event => {\n    event.preventDefault();\n    setPostData({ ...PostData, [event.target.name]: event.target.value });\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    axios({\n      url: `${process.env.REACT_APP_API_URL}/post/${PostData.id}/edit`,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      data: JSON.stringify(PostData)\n    });\n    setOpenModal(false);\n  };\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/post/${PostData.id}/like`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        }\n      }\n    );\n    const data = await response.json();\n    console.log(data.status);\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput({\n      ...commentInput,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `https://localhost:5000/post/${PostData.id}/comment`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(commentInput)\n      }\n    );\n    const data = await response.json();\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(`https://localhost:5000/post/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      }\n    });\n\n    const data = await response.json();\n    console.log(data);\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  const deletePost = async id => {\n    const res = await fetch(`https://localhost:5000/post/${id}/delete`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${props.token}`\n      },\n      body: JSON.stringify({ id: id })\n    });\n    const data = await res.json();\n    if (data.success) {\n      console.log(\"delete success post id:\", id);\n      history.push(\"/home\");\n      setPostData(props.post);\n    } else {\n      console.log(data.status);\n    }\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container col-xl-6 col-md-12\">\n      {loading ? (\n        <Spinner animation=\"border\" variant=\"primary\" />\n      ) : (\n        <div className=\"artwork-home-area\">\n          {/* <div className=\"card mb-4 shadow-sm\"> */}\n          {/* <svg\n            className=\"bd-placeholder-img card-img-top\"\n            width=\"100%\"\n            height=\"225\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            preserveAspectRatio=\"xMidYMid slice\"\n            focusable=\"false\"\n            role=\"img\"\n            aria-label=\"Placeholder: Thumbnail\"\n          > */}\n          {/* <title>Placeholder</title> */}\n          {/* <h5 className=\"title-single-post\">{PostData.title}</h5> */}\n\n          <div className=\"title-btn-single-post\">\n            <div>\n              <h5 className=\"title-single-post\">{PostData.title}</h5>\n            </div>\n            <div className=\"edit-delete-like-btn\">\n              <button\n                onClick={event => {\n                  event.preventDefault();\n                  setOpenModal(true);\n                }}\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\"\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\"\n                onClick={() => deletePost(id)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleOnLike}\n                className=\"btn btn-sm btn-outline-secondary edit-btn\"\n              >\n                <i className=\"fas fa-heart\"></i> {liked ? \"Like\" : \"Unlike\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"author-date-single-post\">\n            <h5>By {PostData.author.firstname}</h5>\n\n            <small className=\"text-muted\">{PostData.created_at}</small>\n          </div>\n          <img\n            // className=\"bd-placeholder-img card-img-top\"\n            width=\"700\"\n            height=\"500\"\n            src={`${PostData.image_url}`}\n            className=\"img-single-post container\"\n          ></img>\n\n          {/* </svg> */}\n          <div className=\"  card-body\">\n            {/* <p className=\"card-text\">{PostData.title}</p> */}\n            <p className=\"card-text\">{PostData.body}</p>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"btn-group\">\n                {/* <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\n              <Nav.Link href=\"/single-post\">View</Nav.Link> */}\n                {/* View */}\n                {/* </button> */}\n              </div>\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <form\n            onChange={handleOnCommentChange}\n            onSubmit={handleOnCommentSubmit}\n          >\n            <h6 style={{ marginTop: \"35px\", marginBottom: \"20px\" }}>\n              <strong>Add a new comment</strong>\n            </h6>\n            <textarea\n              name=\"body\"\n              className=\"form-control form-post-area\"\n              id=\"exampleFormControlTextarea1\"\n              placeholder=\"Write a comment...\"\n              rows=\"3\"\n            ></textarea>\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              className=\"upload-btn signin-btn-v2 post-btn\"\n            >\n              Post Comment\n            </Button>\n          </form>\n          {PostData.comments.map(commentData => {\n            return <Comment data={commentData} />;\n          })}\n          {/* <div className=\"d-flex flex-wrap\">\n          {comment ? (\n            comment.map(post => {\n              return <Comment data={comment} />;\n            })\n          ) : (\n            <p>There is not comment</p>\n          )}\n        </div> */}\n        </div>\n      )}\n      <Modal show={openModal}>\n        <Modal.Header onClick={handleOnClose} closeButton>\n          <Modal.Title className=\"d-flex flex-column justify-content-center align-items-center \">\n            <strong>Edit Post</strong>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form\n            onSubmit={handleOnSubmit}\n            onChange={handleOnChange}\n            className=\"d-flex flex-column justify-content-center  \"\n          >\n            {/* <div> */}\n              <p className=\"title-input-edit-post\">Artwork URL</p>\n\n              <input\n                name=\"image_url\"\n                value={PostData.image_url}\n                className=\"form-control form-control\"\n              ></input>\n            {/* </div> */}\n\n            <img\n              src={PostData ? PostData.image_url : \"\"}\n              className=\"imga\"\n              alt=\"\"\n            />\n\n            {/* <div> */}\n              <p style={{ fontWeight: \"600\", marginTop: \"30px\" }}>Title</p>\n\n              <input\n                name=\"title\"\n                value={PostData.title}\n                className=\"input-edit-post form-control\"\n              ></input>\n            {/* </div> */}\n\n            {/* <div> */}\n              <p style={{ fontWeight: \"600\" }}>Description</p>\n              <input\n                name=\"body\"\n                value={PostData.body}\n                className=\"input-edit-post form-control\"\n              ></input>\n            {/* </div> */}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-lg btn-primary btn-block signin-btn-v2\"\n            >\n              {\" \"}\n              Press this button{\" \"}\n            </button>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}