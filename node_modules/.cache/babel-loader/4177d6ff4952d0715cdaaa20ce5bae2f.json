{"ast":null,"code":"import _defineProperty from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport { axios } from \"axios\";\nimport Comment from \"../components/Comment\";\nimport { Modal } from \"react-bootstrap\";\nexport default function Post() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        PostData = _useState2[0],\n        setPostData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openModal = _useState4[0],\n        setOpenModa = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        liked = _useState6[0],\n        setLiked = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        commentInput = _useState10[0],\n        setCommentInput = _useState10[1];\n\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const handleOnChange = event => {\n    event.preventDefault();\n    setPostData(_objectSpread({}, PostData, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    axios({\n      url: \"https://localhost:5000/post/\".concat(PostData.id, \"/edit\"),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      data: JSON.stringify(PostData)\n    });\n  };\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://localhost:5000/post/\".concat(PostData.id, \"/like\"), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data.status);\n\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput(_objectSpread({}, commentInput, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://localhost:5000/post/\".concat(PostData.id, \"/comment\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      },\n      body: JSON.stringify(commentInput)\n    });\n    const data = await response.json();\n\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(\"https://localhost:5000/post/\".concat(id), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Token \".concat(localStorage.getItem(\"token\"))\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container col-xl-6 col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"artwork-home-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-btn-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"title-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, PostData.title)), React.createElement(\"div\", {\n    className: \"edit-delete-like-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: event => {\n      e.preventDefault();\n    },\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOnLike,\n    className: \"btn btn-sm btn-outline-secondary edit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-heart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), \" \", liked ? \"Like\" : \"Unlike\"))), React.createElement(\"div\", {\n    className: \"author-date-single-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"By \", PostData.author.firstname), React.createElement(\"small\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, PostData.created_at)), React.createElement(\"img\", {\n    // className=\"bd-placeholder-img card-img-top\"\n    width: \"700\",\n    height: \"500\",\n    src: \"\".concat(PostData.image_url),\n    className: \"img-single-post container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"  card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, PostData.body), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onChange: handleOnCommentChange,\n    onSubmit: handleOnCommentSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      marginTop: \"35px\",\n      marginBottom: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Add a new comment\")), React.createElement(\"textarea\", {\n    name: \"body\",\n    className: \"form-control form-post-area\",\n    id: \"exampleFormControlTextarea1\",\n    placeholder: \"Write a comment...\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    className: \"upload-btn signin-btn-v2 post-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Post Comment\")), PostData.comments.map(commentData => {\n    return React.createElement(Comment, {\n      data: commentData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    });\n  })), React.createElement(Modal, {\n    show: openModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Modal heading\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onClick: handleOnSubmit,\n    onChange: handleOnChange,\n    className: \"d-flex flex-column justify-content-center align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"image_url\",\n    value: PostData.image_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: PostData ? PostData.image_url : \"\",\n    width: \"300px\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"title\",\n    value: PostData.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"body\",\n    value: PostData.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \" Press this button \")))));\n}","map":{"version":3,"sources":["/Users/Yoko/Desktop/YOKO/Web_full_stack/designer_blog/frontend/src/pages/SinglePost.js"],"names":["React","useState","useEffect","useParams","Button","Spinner","axios","Comment","Modal","Post","PostData","setPostData","openModal","setOpenModa","liked","setLiked","loading","setLoading","commentInput","setCommentInput","id","handleOnChange","event","preventDefault","target","name","value","handleOnSubmit","url","method","headers","Authorization","localStorage","getItem","data","JSON","stringify","handleOnLike","response","fetch","json","console","log","status","handleOnCommentChange","handleOnCommentSubmit","Accept","body","handleOnLoading","isLiked","title","e","author","firstname","created_at","image_url","marginTop","marginBottom","comments","map","commentData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport { axios } from \"axios\";\nimport Comment from \"../components/Comment\";\nimport { Modal } from \"react-bootstrap\"\n\nexport default function Post() {\n  const [PostData, setPostData] = useState(null);\n  const [ openModal, setOpenModa ] = useState(false)\n  const [liked, setLiked] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [commentInput, setCommentInput] = useState({});\n  const { id } = useParams();\n\n  const handleOnChange = (event) => {\n    event.preventDefault()\n    setPostData({...PostData, [event.target.name]: event.target.value})\n}\n\n  const handleOnSubmit = (event) => {\n      event.preventDefault()\n      axios({ \n          url: `https://localhost:5000/post/${PostData.id}/edit`,\n          method: \"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Token ${localStorage.getItem(\"token\")}`\n          },\n          data: JSON.stringify(PostData)\n      })\n}\n\n\n  const handleOnLike = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `https://localhost:5000/post/${PostData.id}/like`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        }\n      }\n    );\n    const data = await response.json();\n    console.log(data.status);\n    if (data.status === \"OK\") {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n  };\n\n  const handleOnCommentChange = event => {\n    event.preventDefault();\n    setCommentInput({\n      ...commentInput,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleOnCommentSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\n      `https://localhost:5000/post/${PostData.id}/comment`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(commentInput)\n      }\n    );\n    const data = await response.json();\n    if (data.status === \"created\") {\n      handleOnLoading();\n    }\n    handleOnLoading();\n  };\n\n  const handleOnLoading = async () => {\n    const response = await fetch(`https://localhost:5000/post/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      }\n    });\n\n    const data = await response.json();\n    console.log(data);\n    if (data.isLiked) {\n      setLiked(true);\n    } else {\n      setLiked(false);\n    }\n    console.log(PostData);\n    setPostData(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleOnLoading();\n  }, []);\n\n  if (!PostData) {\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container col-xl-6 col-md-12\">\n      {loading ? (\n        <Spinner animation=\"border\" variant=\"primary\" />\n      ) : (\n        <div className=\"artwork-home-area\">\n          {/* <div className=\"card mb-4 shadow-sm\"> */}\n          {/* <svg\n            className=\"bd-placeholder-img card-img-top\"\n            width=\"100%\"\n            height=\"225\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            preserveAspectRatio=\"xMidYMid slice\"\n            focusable=\"false\"\n            role=\"img\"\n            aria-label=\"Placeholder: Thumbnail\"\n          > */}\n          {/* <title>Placeholder</title> */}\n          {/* <h5 className=\"title-single-post\">{PostData.title}</h5> */}\n\n          <div className=\"title-btn-single-post\">\n            <div>\n              <h5 className=\"title-single-post\">{PostData.title}</h5>\n            </div>\n            <div className=\"edit-delete-like-btn\">\n              <button\n                onClick={(event) => {\n                  e.preventDefault()\n\n                }}\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\"\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-sm btn-outline-secondary edit-btn-single-post edit-btn\"\n              >\n                Delete\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleOnLike}\n                className=\"btn btn-sm btn-outline-secondary edit-btn\"\n              >\n                <i className=\"fas fa-heart\"></i> {liked ? \"Like\" : \"Unlike\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"author-date-single-post\">\n            <h5>By {PostData.author.firstname}</h5>\n\n            <small className=\"text-muted\">{PostData.created_at}</small>\n          </div>\n          <img\n            // className=\"bd-placeholder-img card-img-top\"\n            width=\"700\"\n            height=\"500\"\n            src={`${PostData.image_url}`}\n            className=\"img-single-post container\"\n          ></img>\n\n          {/* </svg> */}\n          <div className=\"  card-body\">\n            {/* <p className=\"card-text\">{PostData.title}</p> */}\n            <p className=\"card-text\">{PostData.body}</p>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"btn-group\">\n                {/* <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">\n              <Nav.Link href=\"/single-post\">View</Nav.Link> */}\n                {/* View */}\n                {/* </button> */}\n              </div>\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <form\n            onChange={handleOnCommentChange}\n            onSubmit={handleOnCommentSubmit}\n          >\n            <h6 style={{ marginTop: \"35px\", marginBottom: \"20px\" }}>\n              <strong>Add a new comment</strong>\n            </h6>\n            <textarea\n              name=\"body\"\n              className=\"form-control form-post-area\"\n              id=\"exampleFormControlTextarea1\"\n              placeholder=\"Write a comment...\"\n              rows=\"3\"\n            ></textarea>\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              className=\"upload-btn signin-btn-v2 post-btn\"\n            >\n              Post Comment\n            </Button>\n          </form>\n          {PostData.comments.map(commentData => {\n            return <Comment data={commentData} />;\n          })}\n          {/* <div className=\"d-flex flex-wrap\">\n          {comment ? (\n            comment.map(post => {\n              return <Comment data={comment} />;\n            })\n          ) : (\n            <p>There is not comment</p>\n          )}\n        </div> */}\n        </div>\n      )}\n      <Modal show={openModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form\n            onClick={handleOnSubmit}\n            onChange={handleOnChange}\n            className=\"d-flex flex-column justify-content-center align-items-center\"\n          >\n            <input name=\"image_url\" value={PostData.image_url}></input>\n            <img\n              src={PostData ? PostData.image_url : \"\"}\n              width=\"300px\"\n              alt=\"\"\n            />\n            <input name=\"title\" value={PostData.title}></input>\n            <input name=\"body\" value={PostData.body}></input>\n            <button type=\"submit\"> Press this button </button>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}